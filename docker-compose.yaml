version: "3.8"
name: "my_project"

services:
  
  api:
    container_name: "api_express_js"
    build: "./api"
    env_file:
      - "./.env"
    environment:
     API_MYSQL_HOST: $API_MYSQL_HOST
     API_MYSQL_USER: $API_MYSQL_USER
     API_MYSQL_PASSWORD: $API_MYSQL_PASSWORD
     API_MYSQL_DATABASE: $API_MYSQL_DATABASE
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - mysql
    networks:
      - backend
    mem_limit: 1024m



  mysql:
    container_name: "database_mysql"
    build: "./db"
    volumes:
      - "./dataMysql:/var/lib/mysql"
    env_file:
      - ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
    restart: always
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '10'
          memory: 512m
        reservations:
          cpus: '5'
          memory: 256m


  front_dev:
    container_name: "angular_front_dev"
    build: "./frontDev"
    ports:
      - "4200:4200"
    restart: on-failure
    depends_on:
      - api
    mem_limit: 2048m



  front_prod:
    container_name: "angular_front_prod"
    build: "./frontProd"
    ports:
     - "8080:80"
    restart: on-failure
    depends_on:
      - api
    mem_limit: 512m



      


networks:
  backend:
    driver: bridge

# volumes: